/*
 * Tramways Users API
 * Tramways Users API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.tramways.users.api.v1;

import it.tramways.users.api.ApiException;
import it.tramways.users.api.v1.model.BooleanWrapper;
import it.tramways.users.api.v1.model.ChangePasswordRequest;
import it.tramways.users.api.v1.model.LoginRequest;
import it.tramways.users.api.v1.model.StringWrapper;
import it.tramways.users.api.v1.model.User;
import it.tramways.users.api.v1.model.UserRequest;
import it.tramways.users.api.v1.model.UserRole;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Ignore
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    
    /**
     * Creates a new user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        UserRequest userRequest = null;
        User response = api.createUser(userRequest);

        // TODO: test validations
    }
    
    /**
     * Deletes a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String id = null;
        api.deleteUser(id);

        // TODO: test validations
    }
    
    /**
     * Edit user&#39;s password
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editPasswordTest() throws ApiException {
        String id = null;
        ChangePasswordRequest changePasswordRequest = null;
        api.editPassword(id, changePasswordRequest);

        // TODO: test validations
    }
    
    /**
     * Edit user&#39;s roles
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editRolesTest() throws ApiException {
        String id = null;
        List<UserRole> userRole = null;
        api.editRoles(id, userRole);

        // TODO: test validations
    }
    
    /**
     * Enable or disable a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void enableUserTest() throws ApiException {
        String id = null;
        BooleanWrapper booleanWrapper = null;
        api.enableUser(id, booleanWrapper);

        // TODO: test validations
    }
    
    /**
     * Gets a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        String id = null;
        User response = api.getUser(id);

        // TODO: test validations
    }
    
    /**
     * Gets all users
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersTest() throws ApiException {
        List<User> response = api.getUsers();

        // TODO: test validations
    }
    
    /**
     * Gets logged user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loggedTest() throws ApiException {
        User response = api.logged();

        // TODO: test validations
    }
    
    /**
     * Logs a user in
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        LoginRequest loginRequest = null;
        StringWrapper response = api.login(loginRequest);

        // TODO: test validations
    }
    
    /**
     * Reset user&#39;s password
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetUserTest() throws ApiException {
        String id = null;
        StringWrapper stringWrapper = null;
        api.resetUser(id, stringWrapper);

        // TODO: test validations
    }
    
}
